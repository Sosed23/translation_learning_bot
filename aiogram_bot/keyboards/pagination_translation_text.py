from aiogram.types import InputMediaPhoto
from database import crud as rq
# –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫


async def show_paginated_item(message, items, current_index, state, edit=False):
    current_item = items[current_index]

    # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–µ–∫—É—â–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
    title = current_item.title
    translation = current_item.translation
    transcription = current_item.transcription
    image_id_bot = current_item.image_id_bot
    audio_id_bot = current_item.audio_id_bot
    word_id = current_item.id
    lesson_id = current_item.lesson_id
    user_id = current_item.user_id

    history_learning_word = await rq.get_history_learning_by_word_id(word_id=word_id)

    if history_learning_word is not None:
        count_repeat_word = len(history_learning_word)
    else:
        count_repeat_word = 0

    # –°—É–º–º–∏—Ä—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª—è "rating", –≥–¥–µ rating == 1
    total_rating_plus = 0
    for item in history_learning_word:
        if item.rating == 1:
            total_rating_plus += 1

    # –°—É–º–º–∏—Ä—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª—è "rating", –≥–¥–µ rating == 1
    total_rating_minus = 0
    for item in history_learning_word:
        if item.rating == 0:
            total_rating_minus += 1

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    item_summary = (
        f"–¢–µ–∫—Å—Ç: <strong>{translation}</strong>\n"
        f"–¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è: <strong>{transcription}</strong>\n\n"
        f'–ì–æ–ª–æ—Å–æ–≤–æ–π –ø–µ—Ä–µ–≤–æ–¥: üëÅ‚Äçüó® {count_repeat_word} | üëç {total_rating_plus} | üëé {total_rating_minus}\n')

    # –û–±–Ω–æ–≤–ª—è–µ–º –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Ñ–æ—Ç–æ
    if image_id_bot:
        media_photo = InputMediaPhoto(media=image_id_bot, caption=item_summary)
        if edit:
            try:
                await message.edit_media(media=media_photo, parse_mode="HTML")
            except Exception:
                await message.answer_photo(photo=image_id_bot, caption=item_summary, parse_mode="HTML")
        else:
            await message.answer_photo(photo=image_id_bot, caption=item_summary, parse_mode="HTML")

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∞—É–¥–∏–æ
    if audio_id_bot:
        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∞—É–¥–∏–æ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        data = await state.get_data()
        previous_audio_message_id = data.get('audio_message_id')

        # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∞—É–¥–∏–æ, –µ—Å–ª–∏ –æ–Ω–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if previous_audio_message_id:
            try:
                await message.bot.delete_message(chat_id=message.chat.id, message_id=previous_audio_message_id)
            except Exception:
                pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ —É–¥–∞–ª–µ–Ω–æ –∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        audio_message = await message.answer_voice(voice=audio_id_bot)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –Ω–æ–≤–æ–≥–æ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
        await state.update_data(audio_message_id=audio_message.message_id)

    # –ï—Å–ª–∏ –Ω–∏ —Ñ–æ—Ç–æ, –Ω–∏ –∞—É–¥–∏–æ –Ω–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
    if not image_id_bot and not audio_id_bot:
        if edit:
            await message.edit_text(item_summary, parse_mode="HTML")
        else:
            await message.answer(item_summary, parse_mode="HTML")
